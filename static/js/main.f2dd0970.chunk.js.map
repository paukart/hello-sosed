{"version":3,"sources":["panels/Home.js","panels/Search.js","App.js","index.js"],"names":["Home","id","go","fetchedUser","first_name","title","align","style","color","size","onClick","data-to","osName","platform","Search","test","left","IOS","top","type","defaultValue","country","city","App","useState","activePanel","setActivePanel","setUser","popout","setPopout","useEffect","a","bridge","send","user","subscribe","detail","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","e","currentTarget","dataset","to","ReactDOM","render","getElementById"],"mappings":"wqBA2CeA,G,OAjCF,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,GAAIC,EAAX,EAAWA,YAAX,OACZ,kBAAC,IAAD,CAAOF,GAAIA,GACTE,GACA,kBAAC,IAAD,wDACaA,EAAYC,aAG1B,kBAAC,IAAD,CAAOC,MAAM,qLACZ,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAKC,MAAM,SAASC,MAAO,CAACC,MAAO,SAAnC,qfAGC,kBAAC,IAAD,CAAQC,KAAK,KAAKC,QAASR,EAAIS,UAAQ,UAAvC,6J,8DCZEC,EAASC,cA+CAC,EA5CA,SAAC,GAAD,IAAGb,EAAH,EAAGA,GAAIC,EAAP,EAAOA,GAAIC,EAAX,EAAWA,YAAaY,EAAxB,EAAwBA,KAAxB,OACd,kBAAC,IAAD,CAAOd,GAAIA,GACV,kBAAC,IAAD,CACCe,KAAM,kBAAC,IAAD,CAAmBN,QAASR,EAAIS,UAAQ,QAC5CC,IAAWK,IAAM,kBAAC,IAAD,MAAuB,kBAAC,IAAD,QAF3C,2DAOE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAiBC,IAAI,4IACrB,kBAAC,IAAD,CAAOC,KAAK,OAAOC,aAAY,UAAKjB,EAAYkB,QAAQhB,SACvDF,GAAe,kBAAC,IAAD,CAAOgB,KAAK,OAAOC,aAAY,UAAKjB,EAAYmB,KAAKjB,SACnE,kBAAC,IAAD,CAAOc,KAAK,OAAOC,aAAa,mCAChC,kBAAC,IAAD,CAAOD,KAAK,OAAOC,aAAa,yBAGpC,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAQX,KAAK,IAAIC,QAASK,EAAMJ,UAAQ,SAASL,MAAM,UAAvD,kCAGJ,kBAAC,IAAD,SCaeiB,EArCH,WAAO,IAAD,EACqBC,mBAAS,QAD9B,mBACVC,EADU,KACGC,EADH,OAEcF,mBAAS,MAFvB,mBAEVrB,EAFU,KAEGwB,EAFH,OAGWH,mBAAS,kBAAC,IAAD,CAAef,KAAK,WAHxC,mBAGVmB,EAHU,KAGFC,EAHE,KAKjBC,qBAAU,WAAM,4CAQf,4BAAAC,EAAA,sEACoBC,IAAOC,KAAK,uBADhC,OACOC,EADP,OAECP,EAAQO,GACRL,EAAU,MAHX,4CARe,sBACfG,IAAOG,WAAU,YAAgC,IAAD,IAA5BC,OAAUjB,EAAkB,EAAlBA,KAAMkB,EAAY,EAAZA,KACnC,GAAa,yBAATlB,EAAiC,CACpC,IAAMmB,EAAkBC,SAASC,gBAAgB,UACjDF,EAAgBG,MAAQJ,EAAKK,OAASL,EAAKK,OAAS,eACpDH,SAASI,KAAKC,WAAWC,aAAaP,OALzB,mCAafQ,KACE,IAEH,IAAM5C,EAAK,SAAA6C,GACVrB,EAAeqB,EAAEC,cAAcC,QAAQC,KAtBvB,4CAyBjB,sBAAAnB,EAAA,2FAzBiB,sBA6BjB,OACC,kBAAC,IAAD,CAAMN,YAAaA,EAAaG,OAAQA,GACvC,kBAAC,EAAD,CAAM3B,GAAG,OAAOE,YAAaA,EAAaD,GAAIA,IAC9C,kBAAC,EAAD,CAAQD,GAAG,SAASE,YAAaA,EAAaD,GAAIA,EAAIa,KAhCvC,+CCFlBiB,IAAOC,KAAK,gBAEZkB,IAASC,OAAO,kBAAC,EAAD,MAASb,SAASc,eAAe,W","file":"static/js/main.f2dd0970.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\n\nimport './style.css';\n\nconst Home = ({ id, go, fetchedUser }) => (\n\t<Panel id={id}>\n\t\t{fetchedUser &&\n\t\t\t<PanelHeader>\n\t\t\t\tПривет, {`${fetchedUser.first_name}`}\n\t\t\t</PanelHeader>}\n\n\t\t<Group title=\"Переход на страницу пользователя\">\n\t\t\t<Div>\n\t\t\t<Div align=\"center\" style={{color: 'gray'}}>\n\t\t\t\tДанное приложение позволит вам найти своих соседей по дому и даже объединиться с ними в один чат!\n          \t</Div>\n\t\t\t\t<Button size=\"xl\" onClick={go} data-to=\"search\">\n\t\t\t\t\tПриступить к поиску соседей!\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t</Group>\n\t</Panel>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { platform, IOS } from '@vkontakte/vkui';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\nimport {FormLayoutGroup, FormLayout, Input, Button, Div, Cell} from '@vkontakte/vkui';\r\n\r\nconst osName = platform();\r\n\r\n\r\nconst Search = ({ id, go, fetchedUser, test }) => (\r\n\t<Panel id={id}>\r\n\t\t<PanelHeader\r\n\t\t\tleft={<PanelHeaderButton onClick={go} data-to=\"home\">\r\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\r\n\t\t\t</PanelHeaderButton>}\r\n\t\t>\r\n            Поиск дома\r\n\t\t</PanelHeader>\r\n    <FormLayout>\r\n      <FormLayoutGroup top=\"Введите адрес вашего дома:\">\r\n      <Input type=\"text\" defaultValue={`${fetchedUser.country.title}`} />\r\n      {fetchedUser && <Input type=\"text\" defaultValue={`${fetchedUser.city.title}`} />}\r\n        <Input type=\"text\" defaultValue=\"Улица\" />\r\n        <Input type=\"text\" defaultValue=\"Дом\" />\r\n      </FormLayoutGroup>\r\n    </FormLayout>\r\n    <Div>\r\n    <Button size=\"l\" onClick={test} data-to=\"search\" align=\"center\">\r\n\t\t\t\t\tПоиск\r\n\t</Button>\r\n<Cell></Cell>\r\n    </Div>\r\n\t</Panel>\r\n);\r\n\r\n\r\nSearch.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n    go: PropTypes.func.isRequired,\r\n    test: PropTypes.func.isRequired,\r\n    fetchedUser: PropTypes.shape({\r\n\t\tphoto_200: PropTypes.string,\r\n\t\tfirst_name: PropTypes.string,\r\n        last_name: PropTypes.string,\r\n        country: PropTypes.shape({\r\n\t\t\ttitle: PropTypes.string,\r\n\t\t}),\r\n\t\tcity: PropTypes.shape({\r\n\t\t\ttitle: PropTypes.string,\r\n\t\t}),\r\n\t}),\r\n};\r\n\r\nexport default Search;","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Search from './panels/Search';\n\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\t\n\tasync function test(){\n\t\t\n\t\t};\n\n\treturn (\n\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\n\t\t\t<Search id='search' fetchedUser={fetchedUser} go={go} test={test} />\n\t\t</View>\n\t);\n}\n\nexport default App;\n\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}